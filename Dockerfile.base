FROM node:22 AS base

# Install global dependencies
RUN npm install -g pnpm nodemon tsx typescript

# Set working directory and create user
WORKDIR /app
RUN addgroup -gid 1001 nodejs && \
    adduser -u 1001 -ingroup nodejs -disabled-login uaip

# Copy workspace configuration
COPY pnpm-workspace.yaml ./
COPY package.json ./
COPY pnpm-lock.yaml ./
COPY tsconfig.json ./

# Copy all packages and backend code
COPY packages/ ./packages/
COPY backend/ ./backend/

# Change ownership
RUN chown -R uaip:nodejs /app

# Switch to uaip user
USER uaip

# Install all dependencies once
RUN pnpm install

# Build shared packages once
RUN pnpm build:shared
RUN cd backend && pnpm build-shared

# Create entrypoint script
USER root
COPY <<'EOF' /app/entrypoint-dev.sh
#!/bin/sh

# Default values
SERVICE_NAME=${SERVICE_NAME:-orchestration-pipeline}
SERVICE_PORT=${SERVICE_PORT:-3002}

# Validate service name
case "$SERVICE_NAME" in
  "artifact-service"|"orchestration-pipeline"|"security-gateway"|"capability-registry"|"agent-intelligence"|"discussion-orchestration"|"llm-service")
    echo "Starting development service: $SERVICE_NAME on port: $SERVICE_PORT with hot reloading"
    ;;
  *)
    echo "Error: Invalid SERVICE_NAME. Must be one of: orchestration-pipeline, security-gateway, capability-registry, agent-intelligence, discussion-orchestration, artifact-service, llm-service"
    exit 1
    ;;
esac

# Change to service directory
cd "/app/backend/services/$SERVICE_NAME"

# Check if src directory exists
if [ ! -d "src" ]; then
  echo "Error: src directory not found for service $SERVICE_NAME"
  echo "Available files in service directory:"
  ls -la .
  echo "Available services:"
  ls -la /app/backend/services/
  exit 1
fi

# Check if main entry file exists
if [ ! -f "src/index.ts" ]; then
  echo "Error: src/index.ts not found for service $SERVICE_NAME"
  echo "Available files in src directory:"
  ls -la src/
  exit 1
fi

echo "Starting $SERVICE_NAME with nodemon for hot reloading..."
echo "Watching: src/**/*.ts"
echo "Entry point: src/index.ts"

# Shared packages are already built in base image
echo "Using pre-built shared packages"

# Start the service with nodemon for hot reloading
exec nodemon \
  --watch src \
  --watch ../../shared \
  --watch ../../../packages \
  --ext ts,js,json \
  --ignore "**/*.test.ts" \
  --ignore "**/*.spec.ts" \
  --ignore "**/dist/**" \
  --ignore "**/node_modules/**" \
  --delay 2 \
  --exec "tsx src/index.ts"
EOF

RUN chmod +x /app/entrypoint-dev.sh

# Switch back to uaip user for runtime
USER uaip

# Expose ports
EXPOSE 3001 3002 3003 3004 3005 3006 3007

# Health check script
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:${SERVICE_PORT:-3002}/health || exit 1

ENTRYPOINT ["/app/entrypoint-dev.sh"]