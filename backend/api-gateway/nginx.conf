events {
    worker_connections 1024;
}

http {
    upstream agent_intelligence {
        server agent-intelligence:3001;
    }

    upstream orchestration_pipeline {
        server orchestration-pipeline:3002;
    }

    upstream capability_registry {
        server capability-registry:3003;
    }

    upstream security_gateway {
        server security-gateway:3004;
    }

    server {
        listen 80;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Agent Intelligence Service
        location /api/agent/ {
            proxy_pass http://agent_intelligence/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Orchestration Pipeline Service
        location /api/orchestration/ {
            proxy_pass http://orchestration_pipeline/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Capability Registry Service
        location /api/capabilities/ {
            proxy_pass http://capability_registry/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Security Gateway Service
        location /api/auth/ {
            proxy_pass http://security_gateway/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default route
        location / {
            return 404 "Not Found";
        }
    }
} 