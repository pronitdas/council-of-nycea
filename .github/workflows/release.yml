# name: Release

# on:
#   push:
#     branches: [main]
#   workflow_dispatch:

# permissions:
#   contents: write
#   pull-requests: write
#   packages: write

# jobs:
#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     outputs:
#       release_created: ${{ steps.release.outputs.release_created }}
#       tag_name: ${{ steps.release.outputs.tag_name }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Release Please
#         uses: google-github-actions/release-please-action@v4
#         id: release
#         with:
#           release-type: node
#           package-name: council-of-nycea
#           changelog-types: |
#             [
#               {"type":"feat","section":"Features","hidden":false},
#               {"type":"fix","section":"Bug Fixes","hidden":false},
#               {"type":"docs","section":"Documentation","hidden":false},
#               {"type":"style","section":"Styles","hidden":false},
#               {"type":"refactor","section":"Code Refactoring","hidden":false},
#               {"type":"perf","section":"Performance Improvements","hidden":false},
#               {"type":"test","section":"Tests","hidden":false},
#               {"type":"build","section":"Build System","hidden":false},
#               {"type":"ci","section":"Continuous Integration","hidden":false},
#               {"type":"chore","section":"Chores","hidden":true}
#             ]

#   publish-packages:
#     name: Publish Packages
#     runs-on: ubuntu-latest
#     needs: release
#     if: needs.release.outputs.release_created
#     strategy:
#       matrix:
#         package:
#           - shared/types
#           - shared/utils
#           - shared/services
#           - shared/middleware
#           - shared/config
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
#           registry-url: 'https://registry.npmjs.org'

#       - name: Setup pnpm
#         uses: pnpm/action-setup@v4
#         with:
#           version: '8'

#       - name: Install dependencies
#         working-directory: backend
#         run: pnpm install --frozen-lockfile

#       - name: Build package
#         working-directory: backend/${{ matrix.package }}
#         run: pnpm run build

#       - name: Publish to NPM
#         working-directory: backend/${{ matrix.package }}
#         run: pnpm publish --access public
#         env:
#           NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

#   create-github-release:
#     name: Create GitHub Release
#     runs-on: ubuntu-latest
#     needs: [release, publish-packages]
#     if: needs.release.outputs.release_created
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Setup pnpm
#         uses: pnpm/action-setup@v4
#         with:
#           version: '8'

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
#           cache: 'pnpm'

#       - name: Install dependencies
#         run: pnpm install --frozen-lockfile

#       - name: Build frontend
#         run: pnpm run build

#       - name: Create release assets
#         run: |
#           tar -czf frontend-${{ needs.release.outputs.tag_name }}.tar.gz dist/
#           zip -r frontend-${{ needs.release.outputs.tag_name }}.zip dist/

#       - name: Upload release assets
#         uses: softprops/action-gh-release@v1
#         with:
#           tag_name: ${{ needs.release.outputs.tag_name }}
#           files: |
#             frontend-${{ needs.release.outputs.tag_name }}.tar.gz
#             frontend-${{ needs.release.outputs.tag_name }}.zip
#           generate_release_notes: true 