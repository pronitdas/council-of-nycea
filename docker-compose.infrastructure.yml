# version: '3.8'  # Removed obsolete version field

services:
  # Database Services
  postgres:
    image: postgres:16-alpine
    container_name: uaip-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-uaip}
      POSTGRES_USER: ${POSTGRES_USER:-uaip_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-uaip_password}
      POSTGRES_MULTIPLE_DATABASES: ${POSTGRES_MULTIPLE_DATABASES:-uaip,uaip_test}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - uaip-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U uaip_user -d uaip"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:2025.04.0-community-bullseye
    container_name: uaip-neo4j-dev
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH:-neo4j/uaip_dev_password}
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_apoc_export_file_enabled: true
      NEO4J_apoc_import_file_enabled: true
      NEO4J_apoc_import_file_use__neo4j__config: true
      NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
      NEO4J_dbms_memory_heap_initial__size: 512m
      NEO4J_dbms_memory_heap_max__size: 1G
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./database/neo4j/init:/docker-entrypoint-initdb.d
    networks:
      - uaip-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "uaip_dev_password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:8-alpine
    container_name: uaip-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - uaip-network
    command: redis-server --protected-mode yes --bind 0.0.0.0 --requirepass uaip_redis_password
    environment:
      - REDIS_PASSWORD=uaip_redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "uaip_redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Embedding Engine (Qdrant for vector storage)
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: uaip-qdrant-dev
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    networks:
      - uaip-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: uaip-rabbitmq-dev
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-uaip_user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-uaip_password}
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - uaip-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # Monitoring Stack (Optional for dev)
  prometheus:
    image: prom/prometheus:latest
    container_name: uaip-prometheus-dev
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring:/etc/prometheus/config
      - prometheus_data:/prometheus
    networks:
      - uaip-network
    command:
      - '--config.file=/etc/prometheus/config/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: uaip-grafana-dev
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - uaip-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis_data:
  qdrant_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  uaip-network:
    driver: bridge 